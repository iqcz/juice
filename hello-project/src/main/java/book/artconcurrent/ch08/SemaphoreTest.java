package book.artconcurrent.ch08;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import java.util.concurrent.Semaphore;/** * @author i324779 */public class SemaphoreTest {    private static final int THREAD_COUNT = 30;    private static ExecutorService threadPool = Executors.newFixedThreadPool(THREAD_COUNT);    private static Semaphore s = new Semaphore(5);    public static void main(String[] args) {        for (int i = 0; i < THREAD_COUNT; i++) {            threadPool.execute(() -> {                try {                    s.acquire();                    System.out.println(Thread.currentThread().getId() + ": save data");                    s.release();                } catch (InterruptedException e) {                    e.printStackTrace();                }            });        }        threadPool.shutdown();    }}